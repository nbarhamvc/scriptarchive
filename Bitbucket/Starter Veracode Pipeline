# Needs env variables setting for VERACODE_API_ID, VERACODE_API_KEY and SRCCLR_API_TOKEN

# Uses Maven image to build application, then persists build output. Always reference Veracode build packaging guidance at https://docs.veracode.com/r/compilation_packaging for your language/framework.
# If you have questions about how to package your application correctly, schedule a consultation in the application profile on the Veracode platform with an Applciation Security Consultant.
# Please note, the Applciation Security Consultant will not be able to assist with pipeline config. Contact your Veracode CSE for assistance with this.

image: maven:3.3.9

pipelines:
  default:
      - step:
          name: Build
          caches:
            - maven
          script:
            - mvn package --file pom.xml
          artifacts:
            paths:
              - target/<INSERTFILEFORSCANNING>

# Veracode Pipeline Scan SAST using docker image, which contains the Pipeline Scan jar file. Uses API ID/KEY environment variables. 
# Takes artifact from build step and uploads to Veracode servers for scanning (see -f parameter).
# Note: this scan type could also be conducted outside of a docker image by downloading and calling the wrapper directly.

      - step:
          name: Veracode Pipeline Scan SAST
          image: veracode/pipeline-scan
          script:
            - java -jar /opt/veracode/pipeline-scan.jar --veracode_api_id ${VERACODE_API_ID} --veracode_api_key ${VERACODE_API_KEY} --file target/verademo.war || true

# Agent-based SCA scan submission, scans repo directly, does not require built artifact. 
# Requires SRCCLR_API_TOKEN to be generated on platform then saved as secret for use here.
# Sourceclear was acquired by Veracode in 2018 - this is a trusted domain. The script will download the agent, run it for the purposes of scan, then delete itself.

      - step:           
          name: Veracode Agent Based SCA Scan
          script:
              - curl -sSL https://download.sourceclear.com/ci.sh | sh

# Upload and Scan SAST, SCA (Policy or Sandbox Scan) using docker image. A number of parameters can be passed, see docs.veracode.com for relevant article.
# Takes artifact built earlier and uploads to Veracode platform for scanning.
# If no sandbox parameter  is specified, Policy Scan will take place.
# Avoid exposing credentials in pipeline, set API ID and KEY as secrets.
# Note: this scan type could also be conducted outside of a docker image by downloading and calling the wrapper directly.
            
      - step:
          name: Veracode Upload and Scan SAST, SCA (Policy/Sandbox)
          image: veracode/api-wrapper-java
          script:
            - java -jar /opt/veracode/api-wrapper.jar -vid ${VERACODE_API_ID} -vkey ${VERACODE_API_KEY} -action UploadAndScan -appname "<INSERTAPPNAMEONVERACODEPLATFORM" -createprofile true -autoscan true -filepath <INSERTFILEFORSCANNING> -version $BITBUCKET_BUILD_NUMBER -scantimeout 30
